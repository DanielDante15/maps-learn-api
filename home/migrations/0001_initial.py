# Generated by Django 4.1.7 on 2023-11-01 17:00

import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('razao_social', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Endereco',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cep', models.CharField(max_length=12, null=True, verbose_name='CEP')),
                ('logradouro', models.CharField(max_length=50, verbose_name='Logradouro')),
                ('complemento', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='Compemento')),
                ('bairro', models.CharField(max_length=50, verbose_name='Bairro')),
                ('localidade', models.CharField(max_length=20, verbose_name='Localidade')),
                ('uf', models.CharField(max_length=20, verbose_name='UF')),
                ('num_casa', models.CharField(blank=True, max_length=6, null=True, verbose_name='Número')),
                ('latitude', models.FloatField(default=None, max_length=20, null=True)),
                ('longitude', models.FloatField(default=None, max_length=20, null=True)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.cliente', verbose_name='Cliente')),
            ],
        ),
        migrations.CreateModel(
            name='NotaFiscal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_doc', models.CharField(max_length=50, verbose_name='Numero Documento')),
                ('itens', models.IntegerField(verbose_name='Itens')),
                ('volume', models.IntegerField(verbose_name='Volume')),
                ('redespacho', models.BooleanField()),
                ('end_redespacho', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='home.endereco', verbose_name='Endereço')),
            ],
        ),
        migrations.CreateModel(
            name='Motorista',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, verbose_name='Nome')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('cpf', models.CharField(max_length=11, verbose_name='CPF')),
                ('contato', models.CharField(max_length=15, verbose_name='Contato')),
                ('endereco', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.endereco', verbose_name='Endereço')),
                ('entrega', models.ManyToManyField(blank=True, null=True, related_name='enderecos_entrega', to='home.endereco')),
            ],
        ),
        migrations.CreateModel(
            name='Empresa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('razao_social', models.CharField(max_length=50, unique=True)),
                ('email', models.CharField(max_length=80, unique=True)),
                ('cnpj', models.CharField(max_length=18, unique=True)),
                ('endereco', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='home.endereco', verbose_name='Endereço')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('motorista', models.ManyToManyField(blank=True, related_name='lista_empresas', to='home.motorista')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
